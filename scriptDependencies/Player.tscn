[gd_scene load_steps=8 format=3 uid="uid://cgxp5u4ff3rgi"]

[ext_resource type="Script" path="res://scripts/player.gd" id="1_jmwqx"]
[ext_resource type="PackedScene" uid="uid://b4et75gax848w" path="res://ui/PauseMenu.tscn" id="2_l5cpk"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_hs8cd"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_xrlfq"]

[sub_resource type="Shader" id="Shader_pxtgl"]
code = "shader_type spatial;
render_mode unshaded, shadows_disabled, depth_test_disabled, depth_draw_never;

uniform int color_depth : hint_range(1, 8) = 5;
uniform bool dithering = true;
uniform int resolution_scale = 4;

int dithering_pattern(ivec2 fragcoord) {
	const int pattern[] = {
		-4, +0, -3, +1, 
		+2, -2, +3, -1, 
		-3, +1, -4, +0, 
		+3, -1, +2, -2
	};
	
	int x = fragcoord.x % 4;
	int y = fragcoord.y % 4;
	
	return pattern[y * 4 + x];
}

void vertex() {
	POSITION = vec4(VERTEX, 1.0);
}

void fragment() {
	ivec2 uv = ivec2(FRAGCOORD.xy / float(resolution_scale));
	vec3 color = texelFetch(SCREEN_TEXTURE, uv * resolution_scale, 0).rgb;
	
	// Convert from [0.0, 1.0] range to [0, 255] range
	ivec3 c = ivec3(round(color * 255.0));
	
	// Apply the dithering pattern
	if (dithering) {
		c += ivec3(dithering_pattern(uv));
	}
	
	// Truncate from 8 bits to color_depth bits
	c >>= (8 - color_depth);

	// Convert back to [0.0, 1.0] range
	ALBEDO = vec3(c) / float(1 << color_depth);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_h1km7"]
render_priority = 0
shader = SubResource("Shader_pxtgl")
shader_parameter/color_depth = 5
shader_parameter/dithering = true
shader_parameter/resolution_scale = 4

[sub_resource type="QuadMesh" id="QuadMesh_0i6uk"]
material = SubResource("ShaderMaterial_h1km7")
flip_faces = true
size = Vector2(128, 128)

[node name="Player" type="CharacterBody3D"]
script = ExtResource("1_jmwqx")

[node name="Pivot" type="Node3D" parent="."]

[node name="MeshInstance3D" type="MeshInstance3D" parent="Pivot"]
mesh = SubResource("CapsuleMesh_hs8cd")

[node name="Camera" type="Camera3D" parent="Pivot"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.667, 0)
size = 0.125

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_xrlfq")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.631376)
visibility_range_end = 1.6384e+08
mesh = SubResource("QuadMesh_0i6uk")
skeleton = NodePath("../..")

[node name="Menu" parent="." instance=ExtResource("2_l5cpk")]
